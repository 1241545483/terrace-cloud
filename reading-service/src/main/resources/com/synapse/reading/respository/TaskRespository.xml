<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.synapse.reading.respository.TaskRespository">

    <resultMap id="simpleRow" type="com.synapse.reading.dto.result.TaskResult"
               extends="com.synapse.reading.mapper.TaskMapper.BaseResultMap">
        <id column="class_name" property="className"/>
        <id column="teacher_name" property="teacherName"/>
        <id column="finish" property="finish"/>
        <id column="clicked" property="clicked"/>
        <id column="taskNoteNum" property="taskNoteNum"/>
        <id column="hasIsssue" property="hasIsssue"/>
    </resultMap>

    <select id="listByUser" parameterType="map" resultMap="simpleRow">
        SELECT a.*,b.name class_name,c.name teacher_name ,if(d.task_id is null,0,1) finish,if(e.task_id is null,0,1) clicked
        FROM  task a
        join class_info b on a.class_id= b.rec_id  AND  b.status=1
        join  member c on b.create_id = c.user_id
        left JOIN user_task_record e ON a.rec_id =e.task_id and e.user_id = #{userId}
        LEFT join (SELECT  DISTINCT task_id  FROM task_note WHERE user_id=#{userId}) d  on a.rec_id =d.task_id
        where a.class_id IN
        (select
        class_id
        from `class_student_mapping`
        where 1 = 1
        AND `student_id` = #{userId}) and a.`status`=1
        ORDER BY  a.create_time DESC
        <if test="startIndex != null">
            limit ${startIndex}, ${pageSize}
        </if>
    </select>


    <select id="listByTaskOrTeacher" parameterType="map" resultMap="simpleRow">
        SELECT *
        FROM  task
        where
        1 = 1
        AND `status` = 1 and class_id = #{classId}
        <if test="startTime != null" >
        <![CDATA[    and  date_format(create_time,'%Y-%m') >= #{startTime}  ]]>
        </if>
        <if test="endTime != null" >
            <![CDATA[    and  date_format(create_time,'%Y-%m') <= #{endTime}  ]]>
        </if>

    </select>

    <!--<select id="countTaskNum" parameterType="map" resultType="map">-->

        <!--SELECT count(a.create_time) taskNum ,date_format(a.create_time,'%Y-%m') time-->
        <!--from task  a-->
        <!--JOIN  member b on a.create_id = b.user_id and  b.ORGANIZATION  = #{organization}-->
        <!--<if test="teacherId != null" >-->
            <!--and b.user_id = #{teacherId}-->
        <!--</if>-->
        <!--where a.status =1-->
        <!--<if test="startTime != null" >-->
            <!--<![CDATA[  and  date_format(a.create_time,'%Y-%m') >= #{startTime}   ]]>-->
        <!--</if>-->
        <!--<if test="endTime != null" >-->
            <!--<![CDATA[   and  date_format(a.create_time,'%Y-%m') <= #{endTime}   ]]>-->
        <!--</if>-->
        <!--<if test="taskId != null" >-->
            <!--and a.rec_id = #{taskId}-->
        <!--</if>-->
        <!--<if test="classId != null" >-->
            <!--and a.class_id = #{classId}-->
        <!--</if>-->
        <!--GROUP BY  date_format(a.create_time,'%Y-%m')-->
        <!--ORDER BY   date_format(a.create_time,'%Y-%m')-->

    <!--</select>-->




    <select id="listByCountAllData" parameterType="java.lang.String" resultType="map">

        SELECT a.teacherNum, b.classNum  , c.taskNum , d.finishNum
        from
        ( select  count(create_time) teacherNum
        from member a
        where 1 = 1
        AND ORGANIZATION = #{organization}
        AND STATUS = 1) a
        JOIN
        (SELECT count(a.create_time) classNum
        from class_info  a
        JOIN  member b on a.create_id = b.user_id and b.ORGANIZATION  = #{organization}
        where a.status =1) b
        JOIN

        (SELECT count(a.create_time) taskNum
        from task  a
        JOIN  member b on a.create_id = b.user_id and  b.ORGANIZATION  = #{organization}
        where a.status =1) c
        JOIN
        (SELECT count(a.create_time) finishNum
        from task_note a
        JOIN  member b on a.create_id = b.user_id and b.ORGANIZATION   = #{organization}
        where a.status =1) d
        WHERE 1=1

    </select>





    <select id="countTaskNum" parameterType="map" resultType="map">

        SELECT count(a.create_time) taskNum ,date_format(a.create_time,'%Y-%m') time
        from task  a
        JOIN  member b on a.create_id = b.user_id and  b.ORGANIZATION  = #{organization}
        <if test="teacherId != null" >
            and b.user_id = #{teacherId}
        </if>
        where a.status =1
        <if test="startTime != null" >
            <![CDATA[  and  date_format(a.create_time,'%Y-%m') >= #{startTime}   ]]>
        </if>
        <if test="endTime != null" >
            <![CDATA[   and  date_format(a.create_time,'%Y-%m') <= #{endTime}   ]]>
        </if>
        <if test="taskId != null" >
            and a.rec_id = #{taskId}
        </if>
        <if test="classId != null" >
            and a.class_id = #{classId}
        </if>
        GROUP BY  date_format(a.create_time,'%Y-%m')
        ORDER BY   date_format(a.create_time,'%Y-%m')

    </select>




    <select id="countListByTaskOrTeacher" parameterType="map" resultType="int">
        SELECT count(1)
        FROM  task a
        join class_info b on a.class_id= b.rec_id  AND  b.status=1
        <if test="className != null" >
            <if test="className.indexOf('%') >= 0" >
                AND b.`NAME` like #{className}
            </if>
            <if test="className.indexOf('%') lt 0" >
                AND b.`NAME` = #{className}
            </if>
        </if>
        join  member c on b.create_id = c.user_id
        <if test="teacherName != null" >
            <if test="teacherName.indexOf('%') >= 0" >
                AND c.`NAME` like #{teacherName}
            </if>
            <if test="teacherName.indexOf('%') lt 0" >
                AND c.`NAME` = #{teacherName}
            </if>
        </if>
        join
        (SELECT count(task_id) taskNoteNum ,task_id from task_note where status =1 GROUP BY task_id )
        d on  a.rec_id =d.task_id
        where
        1 = 1
        AND a.`status` = 1
        <if test="taskId != null" >
            <if test="taskId.indexOf('%') >= 0" >
                AND a.`rec_id` like #{taskId}
            </if>
            <if test="taskId.indexOf('%') lt 0" >
                AND a.`rec_id` = #{taskId}
            </if>
        </if>
        <if test="taskName != null" >
            <if test="taskName.indexOf('%') >= 0" >
                AND a.`name` like #{taskName}
            </if>
            <if test="taskName.indexOf('%') lt 0" >
                AND a.`name` = #{taskName}
            </if>
        </if>

    </select>


    <select id="selectTask" resultMap="simpleRow" parameterType="java.lang.String" >
        select
            a.*,b.name class_name,c.name teacher_name
        from `task` a
        join class_info b on a.class_id= b.rec_id
        left join  member c on b.create_id = c.user_id
        where
            a.`rec_id` = #{recId}
    </select>


    <select id="countListByUser" parameterType="java.lang.String" resultType="int">
        SELECT count(1) FROM  task a
        join class_info b on a.class_id= b.rec_id AND  b.status=1
        left join  member c on b.create_id = c.user_id
        where a.class_id IN
        (select
        class_id
        from `class_student_mapping`
        where 1 = 1
        AND `student_id` = #{userId}) and a.`status`=1

    </select>


    <select id="listByClass" parameterType="map" resultMap="simpleRow">
        select
        a.*,if(b.rec_id is null,0,1) hasIsssue
        from `task` a
        left  JOIN  issue  b on a.rec_id =b.belong_to_id AND b.belong_to='task'
        WHERE  1=1
        <if test="recId != null" >
            <if test="recId.indexOf('%') >= 0" >
                AND  a.`rec_id` like #{recId}
            </if>
            <if test="recId.indexOf('%') lt 0" >
                AND a.`rec_id` = #{recId}
            </if>
        </if>
        <if test="name != null" >
            <if test="name.indexOf('%') >= 0" >
                AND a.`name` like #{name}
            </if>
            <if test="name.indexOf('%') lt 0" >
                AND a.`name` = #{name}
            </if>
        </if>
        <if test="cover != null" >
            <if test="cover.indexOf('%') >= 0" >
                AND a.`cover` like #{cover}
            </if>
            <if test="cover.indexOf('%') lt 0" >
                AND a.`cover` = #{cover}
            </if>
        </if>
        <if test="startTime != null" >
            <if test="startTime.indexOf('%') >= 0" >
                AND a.`start_time` like #{startTime}
            </if>
            <if test="startTime.indexOf('%') lt 0" >
                AND a.`start_time` = #{startTime}
            </if>
        </if>
        <if test="endTime != null" >
            <if test="endTime.indexOf('%') >= 0" >
                AND a.`end_time` like #{endTime}
            </if>
            <if test="endTime.indexOf('%') lt 0" >
                AND a.`end_time` = #{endTime}
            </if>
        </if>
        <if test="intro != null" >
            <if test="intro.indexOf('%') >= 0" >
                AND a.`intro` like #{intro}
            </if>
            <if test="intro.indexOf('%') lt 0" >
                AND a.`intro` = #{intro}
            </if>
        </if>
        <if test="studyType != null" >
            <if test="studyType.indexOf('%') >= 0" >
                AND a.`study_type` like #{studyType}
            </if>
            <if test="studyType.indexOf('%') lt 0" >
                AND a.`study_type` = #{studyType}
            </if>
        </if>
        <if test="studyId != null" >
            <if test="studyId.indexOf('%') >= 0" >
                AND a.`study_id` like #{studyId}
            </if>
            <if test="studyId.indexOf('%') lt 0" >
                AND a.`study_id` = #{studyId}
            </if>
        </if>
        <if test="classId != null" >
            <if test="classId.indexOf('%') >= 0" >
                AND a.`class_id` like #{classId}
            </if>
            <if test="classId.indexOf('%') lt 0" >
                AND a.`class_id` = #{classId}
            </if>
        </if>
        <if test="status != null" >
            <if test="status.indexOf('%') >= 0" >
                AND a.`status` like #{status}
            </if>
            <if test="status.indexOf('%') lt 0" >
                AND a.`status` = #{status}
            </if>
        </if>
        <if test="createId != null" >
            <if test="createId.indexOf('%') >= 0" >
                AND a.`create_id` like #{createId}
            </if>
            <if test="createId.indexOf('%') lt 0" >
                AND a.`create_id` = #{createId}
            </if>
        </if>
        <if test="createTime != null" >
            <if test="createTime.indexOf('%') >= 0" >
                AND a.`create_time` like #{createTime}
            </if>
            <if test="createTime.indexOf('%') lt 0" >
                AND a.`create_time` = #{createTime}
            </if>
        </if>
        <if test="updateId != null" >
            <if test="updateId.indexOf('%') >= 0" >
                AND a.`update_id` like #{updateId}
            </if>
            <if test="updateId.indexOf('%') lt 0" >
                AND a.`update_id` = #{updateId}
            </if>
        </if>
        <if test="updateTime != null" >
            <if test="updateTime.indexOf('%') >= 0" >
                AND a.`update_time` like #{updateTime}
            </if>
            <if test="updateTime.indexOf('%') lt 0" >
                AND a.`update_time` = #{updateTime}
            </if>
        </if>
        ORDER BY  a.create_time DESC
        <if test="startIndex != null">
            limit ${startIndex}, ${pageSize}
        </if>
    </select>

</mapper>
