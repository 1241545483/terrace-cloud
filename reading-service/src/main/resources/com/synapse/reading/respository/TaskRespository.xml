<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.synapse.reading.respository.TaskRespository">

    <resultMap id="simpleRow" type="com.synapse.reading.dto.result.TaskResult"
               extends="com.synapse.reading.mapper.TaskMapper.BaseResultMap">
        <id column="class_name" property="className"/>
        <id column="teacher_name" property="teacherName"/>
        <id column="finish" property="finish"/>
        <id column="clicked" property="clicked"/>
    </resultMap>

    <select id="listByUser" parameterType="map" resultMap="simpleRow">
        SELECT a.*,b.name class_name,c.name teacher_name ,if(d.task_id is null,0,1) finish,if(e.task_id is null,0,1) clicked
        FROM  task a
        join class_info b on a.class_id= b.rec_id
        join  member c on b.create_id = c.user_id
        left JOIN user_task_record e ON a.rec_id =e.task_id and e.user_id = #{userId}
        LEFT join (SELECT  DISTINCT task_id  FROM task_note WHERE user_id=#{userId}) d  on e.task_id =d.task_id
        where class_id IN
        (select
        class_id
        from `class_student_mapping`
        where 1 = 1
        AND `student_id` = #{userId})
        ORDER BY  a.create_time DESC
        <if test="startIndex != null">
            limit ${startIndex}, ${pageSize}
        </if>
    </select>

    <select id="selectTask" resultMap="simpleRow" parameterType="java.lang.String" >
        select
            a.*,b.name class_name,c.name teacher_name
        from `task` a
        join class_info b on a.class_id= b.rec_id
        left join  member c on b.create_id = c.user_id
        where
            a.`rec_id` = #{recId}
    </select>


    <select id="countListByUser" parameterType="java.lang.String" resultType="int">
        SELECT count(1) FROM  task a
        join class_info b on a.class_id= b.rec_id
        left join  member c on b.create_id = c.user_id
        where class_id IN
        (select
        class_id
        from `class_student_mapping`
        where 1 = 1
        AND `student_id` = #{userId})

    </select>


    <select id="listByClass" parameterType="map" resultMap="com.synapse.reading.mapper.TaskMapper.BaseResultMap">
        select
        <include refid="com.synapse.reading.mapper.TaskMapper.Base_Column_List" />
        from `task`
        where 1 = 1
        <if test="recId != null" >
            <if test="recId.indexOf('%') >= 0" >
                AND `rec_id` like #{recId}
            </if>
            <if test="recId.indexOf('%') lt 0" >
                AND `rec_id` = #{recId}
            </if>
        </if>
        <if test="name != null" >
            <if test="name.indexOf('%') >= 0" >
                AND `name` like #{name}
            </if>
            <if test="name.indexOf('%') lt 0" >
                AND `name` = #{name}
            </if>
        </if>
        <if test="cover != null" >
            <if test="cover.indexOf('%') >= 0" >
                AND `cover` like #{cover}
            </if>
            <if test="cover.indexOf('%') lt 0" >
                AND `cover` = #{cover}
            </if>
        </if>
        <if test="startTime != null" >
            <if test="startTime.indexOf('%') >= 0" >
                AND `start_time` like #{startTime}
            </if>
            <if test="startTime.indexOf('%') lt 0" >
                AND `start_time` = #{startTime}
            </if>
        </if>
        <if test="endTime != null" >
            <if test="endTime.indexOf('%') >= 0" >
                AND `end_time` like #{endTime}
            </if>
            <if test="endTime.indexOf('%') lt 0" >
                AND `end_time` = #{endTime}
            </if>
        </if>
        <if test="intro != null" >
            <if test="intro.indexOf('%') >= 0" >
                AND `intro` like #{intro}
            </if>
            <if test="intro.indexOf('%') lt 0" >
                AND `intro` = #{intro}
            </if>
        </if>
        <if test="studyType != null" >
            <if test="studyType.indexOf('%') >= 0" >
                AND `study_type` like #{studyType}
            </if>
            <if test="studyType.indexOf('%') lt 0" >
                AND `study_type` = #{studyType}
            </if>
        </if>
        <if test="studyId != null" >
            <if test="studyId.indexOf('%') >= 0" >
                AND `study_id` like #{studyId}
            </if>
            <if test="studyId.indexOf('%') lt 0" >
                AND `study_id` = #{studyId}
            </if>
        </if>
        <if test="classId != null" >
            <if test="classId.indexOf('%') >= 0" >
                AND `class_id` like #{classId}
            </if>
            <if test="classId.indexOf('%') lt 0" >
                AND `class_id` = #{classId}
            </if>
        </if>
        <if test="status != null" >
            <if test="status.indexOf('%') >= 0" >
                AND `status` like #{status}
            </if>
            <if test="status.indexOf('%') lt 0" >
                AND `status` = #{status}
            </if>
        </if>
        <if test="createId != null" >
            <if test="createId.indexOf('%') >= 0" >
                AND `create_id` like #{createId}
            </if>
            <if test="createId.indexOf('%') lt 0" >
                AND `create_id` = #{createId}
            </if>
        </if>
        <if test="createTime != null" >
            <if test="createTime.indexOf('%') >= 0" >
                AND `create_time` like #{createTime}
            </if>
            <if test="createTime.indexOf('%') lt 0" >
                AND `create_time` = #{createTime}
            </if>
        </if>
        <if test="updateId != null" >
            <if test="updateId.indexOf('%') >= 0" >
                AND `update_id` like #{updateId}
            </if>
            <if test="updateId.indexOf('%') lt 0" >
                AND `update_id` = #{updateId}
            </if>
        </if>
        <if test="updateTime != null" >
            <if test="updateTime.indexOf('%') >= 0" >
                AND `update_time` like #{updateTime}
            </if>
            <if test="updateTime.indexOf('%') lt 0" >
                AND `update_time` = #{updateTime}
            </if>
        </if>
        ORDER BY  create_time DESC
        <if test="startIndex != null">
            limit ${startIndex}, ${pageSize}
        </if>
    </select>

</mapper>
