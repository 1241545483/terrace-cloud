<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.synapse.reading.respository.MemberRespository">

    <!-- 通用查询映射结果 -->
    <resultMap id="simpleRow" type="com.synapse.reading.dto.result.MemberResult"
               extends="com.synapse.reading.mapper.MemberMapper.BaseResultMap">
        <id column="answer" property="answer"/>
        <id column="realName" property="realName"/>
        <id column="classNum" property="classNum"/>
    </resultMap>


    <select id="listMember" resultMap="simpleRow" parameterType="map" >
        SELECT  b.* , s.answer from member b
        join  issue_answer s on b.user_id = s.create_id and s.issue_id =#{issueId}
        where 1=1
        <if test="userId != null" >
            and  b.user_id =#{userId}
        </if>
    </select>

    <select id="listByClassId" resultMap="simpleRow" parameterType="map" >

        select a.pic,a.user_id,  c.real_name as name   from  member a
            join class_student_mapping c on a.user_id = c.student_id
            join class_info b on b.rec_id = #{classId}  and b.rec_id = c.class_id
        WHERE  1=1
        <if test="startIndex != null">
            limit ${startIndex}, ${pageSize}
        </if>

    </select>

    <select id="countClassMember" parameterType="java.lang.String" resultType="int">
        select count(1) from  member a
            join class_student_mapping c on a.user_id = c.student_id
            join class_info b on b.rec_id = #{classId}  and b.rec_id = c.class_id
        WHERE  1=1
    </select>

    <update id="addPoint" parameterType="com.synapse.reading.model.Member" >
        update  `member` SET
         `update_id`=#{updateId},`update_time`=#{updateTime},
        `point`= point + #{point}
        where
        `user_id` = #{userId}
    </update>

    <select id="selectByIdCard" parameterType="map" resultMap="com.synapse.reading.mapper.MemberMapper.BaseResultMap">
        select *
        from member
        where status = 1 and id_card = #{idCard, jdbcType=VARCHAR}
    </select>


    <select id="selectExpert" resultMap="com.synapse.reading.mapper.MemberMapper.BaseResultMap">
        SELECT m.* from member m
        where m.expert =1 and exists (select 1 from lesson l where m.user_id =l.expert_id)
        <if test="startIndex != null">
            limit ${startIndex}, ${pageSize}
        </if>
    </select>


    <select id="selectByUserId" parameterType="map" resultMap="com.synapse.reading.mapper.MemberMapper.BaseResultMap">
        select *
        from member
        where status = 1 and user_id = #{userId, jdbcType=VARCHAR}
    </select>


    <select id="selectByPhone" parameterType="java.lang.String" resultType="java.lang.String">
        select user_id
        from member
        where status = 1 and mobile = #{phone, jdbcType=VARCHAR}
    </select>

    <select id="countTeacher" parameterType="java.lang.String" resultType="int">
        select count(1)
        from `member` a
            join user_role b on a.user_id = b.user_id
        where 1 = 1
              AND b.role_id = #{roleId}
    </select>


    <select id="listTeacher"  parameterType="map" resultMap="com.synapse.reading.mapper.MemberMapper.BaseResultMap">
        select a.*
        from `member` a
        join user_role b on a.user_id = b.user_id
        where 1 = 1
        AND b.role_id = #{roleId}
        <if test="startIndex != null">
            limit ${startIndex}, ${pageSize}
        </if>
    </select>


    <select id="listByTaskId"  parameterType="map" resultMap="com.synapse.reading.mapper.MemberMapper.BaseResultMap">
        SELECT DISTINCT m.user_id,m.`NAME`,m.pic  FROM  member  m
            join  issue_answer a on a.create_id =m.user_id
            join  issue b on a.issue_id = b.rec_id and b.belong_to ='task' and  b.belong_to_id = #{taskId}
            JOIN  task  c on b.belong_to_id =c.rec_id WHERE 1=1 GROUP BY  m.user_id
    </select>

    <select id="countTeacherBySchool" parameterType="java.lang.String" resultType="int">
        select
        count(*)
        from `member` a
        left  join
        (SELECT count(create_id) classNum ,create_id from class_info where status =1 GROUP BY create_id )
        b on  a.user_id =b.create_id
        where 1 = 1
        AND a.`ORGANIZATION` = #{organization}
        AND a.`STATUS` = "1"
        <if test="name != null" >
            <if test="name.indexOf('%') >= 0" >
                AND a.`NAME` like #{name}
            </if>
            <if test="name.indexOf('%') lt 0" >
                AND a.`NAME` = #{name}
            </if>
        </if>
    </select>

    <select id="listByShchool" parameterType="map" resultMap="simpleRow">
        select
        a.* ,b.classNum
        from `member` a
       left join
        (SELECT count(create_id) classNum ,create_id from class_info where status =1 GROUP BY create_id )
        b on  a.user_id =b.create_id
        where 1 = 1
        AND a.`ORGANIZATION` = #{organization}
        AND a.`STATUS` = "1"
        <if test="name != null" >
            <if test="name.indexOf('%') >= 0" >
                AND a.`NAME` like #{name}
            </if>
            <if test="name.indexOf('%') lt 0" >
                AND a.`NAME` = #{name}
            </if>
        </if>
        ORDER BY   b.classNum  DESC
        <if test="startIndex != null">
            limit ${startIndex}, ${pageSize}
        </if>
    </select>
</mapper>
