<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.synapse.reading.mapper.TradeOrderMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.synapse.reading.model.TradeOrder">
        <id column="rec_id" property="recId" />
        <result column="import_data" property="importData" />
        <result column="sell_id" property="sellId" />
        <result column="buy_id" property="buyId" />
        <result column="name" property="name" />
        <result column="intro" property="intro" />
        <result column="pay_no" property="payNo" />
        <result column="pay_way" property="payWay" />
        <result column="price" property="price" />
        <result column="status" property="status" />
        <result column="create_id" property="createId" />
        <result column="create_time" property="createTime" />
        <result column="update_id" property="updateId" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
      `rec_id`,`import_data`,`sell_id`,`buy_id`,`name`,`intro`,`pay_no`,`pay_way`,`price`,`status`,`create_id`,`create_time`,`update_id`,`update_time`
    </sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from `trade_order`
        where
                `rec_id` = #{recId}
    </select>

    <insert id="insert"  parameterType="com.synapse.reading.model.TradeOrder">
        insert into `trade_order`
        (<include refid="Base_Column_List" />)
        values (#{recId},#{importData},#{sellId},#{buyId},#{name},#{intro},#{payNo},#{payWay},#{price},#{status},#{createId},#{createTime},#{updateId},#{updateTime})
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from `trade_order`
        where
			    `rec_id` = #{recId}
    </delete>

    <insert id="insertSelective"  parameterType="com.synapse.reading.model.TradeOrder" >
        insert into `trade_order`
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test="recId != null" >
                    `rec_id`,
                </if>
                <if test="importData != null" >
                    `import_data`,
                </if>
                <if test="sellId != null" >
                    `sell_id`,
                </if>
                <if test="buyId != null" >
                    `buy_id`,
                </if>
                <if test="name != null" >
                    `name`,
                </if>
                <if test="intro != null" >
                    `intro`,
                </if>
                <if test="payNo != null" >
                    `pay_no`,
                </if>
                <if test="payWay != null" >
                    `pay_way`,
                </if>
                <if test="price != null" >
                    `price`,
                </if>
                <if test="status != null" >
                    `status`,
                </if>
                <if test="createId != null" >
                    `create_id`,
                </if>
                <if test="createTime != null" >
                    `create_time`,
                </if>
                <if test="updateId != null" >
                    `update_id`,
                </if>
                <if test="updateTime != null" >
                    `update_time`,
                </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
                <if test="recId != null" >
			        #{recId},
                </if>
                <if test="importData != null" >
			        #{importData},
                </if>
                <if test="sellId != null" >
			        #{sellId},
                </if>
                <if test="buyId != null" >
			        #{buyId},
                </if>
                <if test="name != null" >
			        #{name},
                </if>
                <if test="intro != null" >
			        #{intro},
                </if>
                <if test="payNo != null" >
			        #{payNo},
                </if>
                <if test="payWay != null" >
			        #{payWay},
                </if>
                <if test="price != null" >
			        #{price},
                </if>
                <if test="status != null" >
			        #{status},
                </if>
                <if test="createId != null" >
			        #{createId},
                </if>
                <if test="createTime != null" >
			        #{createTime},
                </if>
                <if test="updateId != null" >
			        #{updateId},
                </if>
                <if test="updateTime != null" >
			        #{updateTime},
                </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.synapse.reading.model.TradeOrder" >
        update `trade_order`
        <set >
	            <if test="recId != null" >
		            `rec_id` = #{recId},
	            </if>
	            <if test="importData != null" >
		            `import_data` = #{importData},
	            </if>
	            <if test="sellId != null" >
		            `sell_id` = #{sellId},
	            </if>
	            <if test="buyId != null" >
		            `buy_id` = #{buyId},
	            </if>
	            <if test="name != null" >
		            `name` = #{name},
	            </if>
	            <if test="intro != null" >
		            `intro` = #{intro},
	            </if>
	            <if test="payNo != null" >
		            `pay_no` = #{payNo},
	            </if>
	            <if test="payWay != null" >
		            `pay_way` = #{payWay},
	            </if>
	            <if test="price != null" >
		            `price` = #{price},
	            </if>
	            <if test="status != null" >
		            `status` = #{status},
	            </if>
	            <if test="createId != null" >
		            `create_id` = #{createId},
	            </if>
	            <if test="createTime != null" >
		            `create_time` = #{createTime},
	            </if>
	            <if test="updateId != null" >
		            `update_id` = #{updateId},
	            </if>
	            <if test="updateTime != null" >
		            `update_time` = #{updateTime},
	            </if>
        </set>
        where
		    `rec_id` = #{recId}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.synapse.reading.model.TradeOrder" >
        update  `trade_order` SET
		    `rec_id`=#{recId},`import_data`=#{importData},`sell_id`=#{sellId},`buy_id`=#{buyId},`name`=#{name},`intro`=#{intro},`pay_no`=#{payNo},`pay_way`=#{payWay},`price`=#{price},`status`=#{status},`create_id`=#{createId},`create_time`=#{createTime},`update_id`=#{updateId},`update_time`=#{updateTime}
        where
		    `rec_id` = #{recId}
    </update>

    <select id="count" parameterType="map" resultType="int">
        select count(1)
	    from `trade_order`
        where 1 = 1
            <if test="recId != null" >
                    <if test="recId.indexOf('%') >= 0" >
                        AND `rec_id` like #{recId}
                    </if>
                    <if test="recId.indexOf('%') lt 0" >
                        AND `rec_id` = #{recId}
                    </if>
            </if>
            <if test="importData != null" >
                    <if test="importData.indexOf('%') >= 0" >
                        AND `import_data` like #{importData}
                    </if>
                    <if test="importData.indexOf('%') lt 0" >
                        AND `import_data` = #{importData}
                    </if>
            </if>
            <if test="sellId != null" >
                    <if test="sellId.indexOf('%') >= 0" >
                        AND `sell_id` like #{sellId}
                    </if>
                    <if test="sellId.indexOf('%') lt 0" >
                        AND `sell_id` = #{sellId}
                    </if>
            </if>
            <if test="buyId != null" >
                    <if test="buyId.indexOf('%') >= 0" >
                        AND `buy_id` like #{buyId}
                    </if>
                    <if test="buyId.indexOf('%') lt 0" >
                        AND `buy_id` = #{buyId}
                    </if>
            </if>
            <if test="name != null" >
                    <if test="name.indexOf('%') >= 0" >
                        AND `name` like #{name}
                    </if>
                    <if test="name.indexOf('%') lt 0" >
                        AND `name` = #{name}
                    </if>
            </if>
            <if test="intro != null" >
                    <if test="intro.indexOf('%') >= 0" >
                        AND `intro` like #{intro}
                    </if>
                    <if test="intro.indexOf('%') lt 0" >
                        AND `intro` = #{intro}
                    </if>
            </if>
            <if test="payNo != null" >
                    <if test="payNo.indexOf('%') >= 0" >
                        AND `pay_no` like #{payNo}
                    </if>
                    <if test="payNo.indexOf('%') lt 0" >
                        AND `pay_no` = #{payNo}
                    </if>
            </if>
            <if test="payWay != null" >
                    <if test="payWay.indexOf('%') >= 0" >
                        AND `pay_way` like #{payWay}
                    </if>
                    <if test="payWay.indexOf('%') lt 0" >
                        AND `pay_way` = #{payWay}
                    </if>
            </if>
            <if test="price != null" >
                    <if test="price.indexOf('%') >= 0" >
                        AND `price` like #{price}
                    </if>
                    <if test="price.indexOf('%') lt 0" >
                        AND `price` = #{price}
                    </if>
            </if>
            <if test="status != null" >
                    <if test="status.indexOf('%') >= 0" >
                        AND `status` like #{status}
                    </if>
                    <if test="status.indexOf('%') lt 0" >
                        AND `status` = #{status}
                    </if>
            </if>
            <if test="createId != null" >
                    <if test="createId.indexOf('%') >= 0" >
                        AND `create_id` like #{createId}
                    </if>
                    <if test="createId.indexOf('%') lt 0" >
                        AND `create_id` = #{createId}
                    </if>
            </if>
            <if test="createTime != null" >
                    <if test="createTime.indexOf('%') >= 0" >
                        AND `create_time` like #{createTime}
                    </if>
                    <if test="createTime.indexOf('%') lt 0" >
                        AND `create_time` = #{createTime}
                    </if>
            </if>
            <if test="updateId != null" >
                    <if test="updateId.indexOf('%') >= 0" >
                        AND `update_id` like #{updateId}
                    </if>
                    <if test="updateId.indexOf('%') lt 0" >
                        AND `update_id` = #{updateId}
                    </if>
            </if>
            <if test="updateTime != null" >
                    <if test="updateTime.indexOf('%') >= 0" >
                        AND `update_time` like #{updateTime}
                    </if>
                    <if test="updateTime.indexOf('%') lt 0" >
                        AND `update_time` = #{updateTime}
                    </if>
            </if>
    </select>

    <select id="list" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `trade_order`
        where 1 = 1
            <if test="recId != null" >
	            <if test="recId.indexOf('%') >= 0" >
				    AND `rec_id` like #{recId}
	            </if>
                <if test="recId.indexOf('%') lt 0" >
                    AND `rec_id` = #{recId}
                </if>
            </if>
            <if test="importData != null" >
	            <if test="importData.indexOf('%') >= 0" >
				    AND `import_data` like #{importData}
	            </if>
                <if test="importData.indexOf('%') lt 0" >
                    AND `import_data` = #{importData}
                </if>
            </if>
            <if test="sellId != null" >
	            <if test="sellId.indexOf('%') >= 0" >
				    AND `sell_id` like #{sellId}
	            </if>
                <if test="sellId.indexOf('%') lt 0" >
                    AND `sell_id` = #{sellId}
                </if>
            </if>
            <if test="buyId != null" >
	            <if test="buyId.indexOf('%') >= 0" >
				    AND `buy_id` like #{buyId}
	            </if>
                <if test="buyId.indexOf('%') lt 0" >
                    AND `buy_id` = #{buyId}
                </if>
            </if>
            <if test="name != null" >
	            <if test="name.indexOf('%') >= 0" >
				    AND `name` like #{name}
	            </if>
                <if test="name.indexOf('%') lt 0" >
                    AND `name` = #{name}
                </if>
            </if>
            <if test="intro != null" >
	            <if test="intro.indexOf('%') >= 0" >
				    AND `intro` like #{intro}
	            </if>
                <if test="intro.indexOf('%') lt 0" >
                    AND `intro` = #{intro}
                </if>
            </if>
            <if test="payNo != null" >
	            <if test="payNo.indexOf('%') >= 0" >
				    AND `pay_no` like #{payNo}
	            </if>
                <if test="payNo.indexOf('%') lt 0" >
                    AND `pay_no` = #{payNo}
                </if>
            </if>
            <if test="payWay != null" >
	            <if test="payWay.indexOf('%') >= 0" >
				    AND `pay_way` like #{payWay}
	            </if>
                <if test="payWay.indexOf('%') lt 0" >
                    AND `pay_way` = #{payWay}
                </if>
            </if>
            <if test="price != null" >
	            <if test="price.indexOf('%') >= 0" >
				    AND `price` like #{price}
	            </if>
                <if test="price.indexOf('%') lt 0" >
                    AND `price` = #{price}
                </if>
            </if>
            <if test="status != null" >
	            <if test="status.indexOf('%') >= 0" >
				    AND `status` like #{status}
	            </if>
                <if test="status.indexOf('%') lt 0" >
                    AND `status` = #{status}
                </if>
            </if>
            <if test="createId != null" >
	            <if test="createId.indexOf('%') >= 0" >
				    AND `create_id` like #{createId}
	            </if>
                <if test="createId.indexOf('%') lt 0" >
                    AND `create_id` = #{createId}
                </if>
            </if>
            <if test="createTime != null" >
	            <if test="createTime.indexOf('%') >= 0" >
				    AND `create_time` like #{createTime}
	            </if>
                <if test="createTime.indexOf('%') lt 0" >
                    AND `create_time` = #{createTime}
                </if>
            </if>
            <if test="updateId != null" >
	            <if test="updateId.indexOf('%') >= 0" >
				    AND `update_id` like #{updateId}
	            </if>
                <if test="updateId.indexOf('%') lt 0" >
                    AND `update_id` = #{updateId}
                </if>
            </if>
            <if test="updateTime != null" >
	            <if test="updateTime.indexOf('%') >= 0" >
				    AND `update_time` like #{updateTime}
	            </if>
                <if test="updateTime.indexOf('%') lt 0" >
                    AND `update_time` = #{updateTime}
                </if>
            </if>
        <if test="startIndex != null">
        	limit ${startIndex}, ${pageSize}
        </if>
    </select>

</mapper>
