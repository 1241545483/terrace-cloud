<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.synapse.reading.mapper.auth.WxLoginStateMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.synapse.reading.model.auth.WxLoginState">
        <id column="rec_id" property="recId" />
        <result column="openId" property="openId" />
        <result column="unionId" property="unionId" />
        <result column="token" property="token" />
        <result column="status" property="status" />
        <result column="status_desc" property="statusDesc" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
      `rec_id`,`openId`,`unionId`,`token`,`status`,`status_desc`
    </sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from `wx_login_state`
        where
                `rec_id` = #{recId}
    </select>

    <insert id="insert"  parameterType="com.synapse.reading.model.auth.WxLoginState">
        insert into `wx_login_state`
        (<include refid="Base_Column_List" />)
        values (#{recId},#{openId},#{unionId},#{token},#{status},#{statusDesc})
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from `wx_login_state`
        where
			    `rec_id` = #{recId}
    </delete>

    <insert id="insertSelective"  parameterType="com.synapse.reading.model.auth.WxLoginState" >
        insert into `wx_login_state`
        <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test="recId != null" >
                    `rec_id`,
                </if>
                <if test="openId != null" >
                    `openId`,
                </if>
                <if test="unionId != null" >
                    `unionId`,
                </if>
                <if test="token != null" >
                    `token`,
                </if>
                <if test="status != null" >
                    `status`,
                </if>
                <if test="statusDesc != null" >
                    `status_desc`,
                </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
                <if test="recId != null" >
			        #{recId},
                </if>
                <if test="openId != null" >
			        #{openId},
                </if>
                <if test="unionId != null" >
			        #{unionId},
                </if>
                <if test="token != null" >
			        #{token},
                </if>
                <if test="status != null" >
			        #{status},
                </if>
                <if test="statusDesc != null" >
			        #{statusDesc},
                </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.synapse.reading.model.auth.WxLoginState" >
        update `wx_login_state`
        <set >
	            <if test="recId != null" >
		            `rec_id` = #{recId},
	            </if>
	            <if test="openId != null" >
		            `openId` = #{openId},
	            </if>
	            <if test="unionId != null" >
		            `unionId` = #{unionId},
	            </if>
	            <if test="token != null" >
		            `token` = #{token},
	            </if>
	            <if test="status != null" >
		            `status` = #{status},
	            </if>
	            <if test="statusDesc != null" >
		            `status_desc` = #{statusDesc},
	            </if>
        </set>
        where
		    `rec_id` = #{recId}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.synapse.reading.model.auth.WxLoginState" >
        update  `wx_login_state` SET
		    `rec_id`=#{recId},`openId`=#{openId},`unionId`=#{unionId},`token`=#{token},`status`=#{status},`status_desc`=#{statusDesc}
        where
		    `rec_id` = #{recId}
    </update>

    <select id="count" parameterType="map" resultType="int">
        select count(1)
	    from `wx_login_state`
        where 1 = 1
            <if test="recId != null" >
                    <if test="recId.indexOf('%') >= 0" >
                        AND `rec_id` like #{recId}
                    </if>
                    <if test="recId.indexOf('%') lt 0" >
                        AND `rec_id` = #{recId}
                    </if>
            </if>
            <if test="openId != null" >
                    <if test="openId.indexOf('%') >= 0" >
                        AND `openId` like #{openId}
                    </if>
                    <if test="openId.indexOf('%') lt 0" >
                        AND `openId` = #{openId}
                    </if>
            </if>
            <if test="unionId != null" >
                    <if test="unionId.indexOf('%') >= 0" >
                        AND `unionId` like #{unionId}
                    </if>
                    <if test="unionId.indexOf('%') lt 0" >
                        AND `unionId` = #{unionId}
                    </if>
            </if>
            <if test="token != null" >
                    <if test="token.indexOf('%') >= 0" >
                        AND `token` like #{token}
                    </if>
                    <if test="token.indexOf('%') lt 0" >
                        AND `token` = #{token}
                    </if>
            </if>
            <if test="status != null" >
                    <if test="status.indexOf('%') >= 0" >
                        AND `status` like #{status}
                    </if>
                    <if test="status.indexOf('%') lt 0" >
                        AND `status` = #{status}
                    </if>
            </if>
            <if test="statusDesc != null" >
                    <if test="statusDesc.indexOf('%') >= 0" >
                        AND `status_desc` like #{statusDesc}
                    </if>
                    <if test="statusDesc.indexOf('%') lt 0" >
                        AND `status_desc` = #{statusDesc}
                    </if>
            </if>
    </select>

    <select id="list" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `wx_login_state`
        where 1 = 1
            <if test="recId != null" >
	            <if test="recId.indexOf('%') >= 0" >
				    AND `rec_id` like #{recId}
	            </if>
                <if test="recId.indexOf('%') lt 0" >
                    AND `rec_id` = #{recId}
                </if>
            </if>
            <if test="openId != null" >
	            <if test="openId.indexOf('%') >= 0" >
				    AND `openId` like #{openId}
	            </if>
                <if test="openId.indexOf('%') lt 0" >
                    AND `openId` = #{openId}
                </if>
            </if>
            <if test="unionId != null" >
	            <if test="unionId.indexOf('%') >= 0" >
				    AND `unionId` like #{unionId}
	            </if>
                <if test="unionId.indexOf('%') lt 0" >
                    AND `unionId` = #{unionId}
                </if>
            </if>
            <if test="token != null" >
	            <if test="token.indexOf('%') >= 0" >
				    AND `token` like #{token}
	            </if>
                <if test="token.indexOf('%') lt 0" >
                    AND `token` = #{token}
                </if>
            </if>
            <if test="status != null" >
	            <if test="status.indexOf('%') >= 0" >
				    AND `status` like #{status}
	            </if>
                <if test="status.indexOf('%') lt 0" >
                    AND `status` = #{status}
                </if>
            </if>
            <if test="statusDesc != null" >
	            <if test="statusDesc.indexOf('%') >= 0" >
				    AND `status_desc` like #{statusDesc}
	            </if>
                <if test="statusDesc.indexOf('%') lt 0" >
                    AND `status_desc` = #{statusDesc}
                </if>
            </if>
        <if test="startIndex != null">
        	limit ${startIndex}, ${pageSize}
        </if>
    </select>

</mapper>
